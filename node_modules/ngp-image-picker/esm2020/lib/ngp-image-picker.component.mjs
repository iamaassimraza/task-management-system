import { Component, Input, Output, EventEmitter, ViewEncapsulation, ViewChild, ChangeDetectionStrategy, } from '@angular/core';
import { convertImageUsingCanvas } from './functions/image-processing';
import labelEs from './i18n/es.json';
import labelEn from './i18n/en.json';
import labelFr from './i18n/fr.json';
import labelDe from './i18n/de.json';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./components/edit-image/edit-image.component";
export class NgpImagePickerComponent {
    constructor(chRef) {
        this.chRef = chRef;
        this.config = {
            language: 'en',
            objectFit: 'cover',
            hideDeleteBtn: false,
            hideDownloadBtn: false,
            hideEditBtn: false,
            hideAddBtn: false,
        };
        this.state = {
            quality: 92,
            maxHeight: 1000,
            maxWidth: 1000,
            cropHeight: 150,
            cropWidth: 150,
            maintainAspectRatio: true,
            format: 'jpeg',
            arrayCopiedImages: [],
            originImageSrc: '',
        };
        this.loadImage = false;
        this.fileType = '';
        this.urlImage = '';
        this.uuidFilePicker = Date.now().toString(20);
        this.showEditPanel = false;
        this.imageName = 'donload';
        this.labels = labelEn;
        this.arrayCopiedImages = [];
        this.color = '#1e88e5';
        this.imagePicker = null;
        this.$imageChanged = new EventEmitter();
        this.$imageOriginal = new EventEmitter();
    }
    set _imageSrc(value) {
        if (value) {
            this.parseToBase64(value).then((dataUri) => {
                this.imageSrc = dataUri;
                this.state.originImageSrc = value;
                this.state.arrayCopiedImages.push({
                    lastImage: dataUri,
                    width: this.state.maxWidth,
                    height: this.state.maxHeight,
                    quality: this.state.quality,
                    format: this.state.format,
                    originImageSrc: value,
                });
                this.$imageOriginal.next(this.state.originImageSrc);
                this.loadImage = true;
                this.chRef.markForCheck();
            });
        }
        else {
            this.imageSrc = null;
            this.state.originImageSrc = null;
            this.loadImage = false;
            this.state.arrayCopiedImages = [];
            this.$imageOriginal.next(null);
            this.state = {
                ...this.state,
                format: 'jpeg',
                maxHeight: 1000,
                maxWidth: 1000,
                cropHeight: 150,
                cropWidth: 150,
                maintainAspectRatio: true,
            };
            this.showEditPanel = false;
            this.chRef.markForCheck();
        }
    }
    set _config(value) {
        this.processConfig(value);
    }
    ngOnInit() {
        this.appendLinkIconsToHead();
    }
    appendLinkIconsToHead() {
        let head = document.head;
        let linkIcons = head.querySelector('#ngp-image-picker-icons-id');
        if (linkIcons)
            return;
        let link = document.createElement('link');
        link.href = 'https://fonts.googleapis.com/icon?family=Material+Icons';
        link.rel = 'stylesheet';
        link.id = 'ngp-image-picker-icons-id';
        head.appendChild(link);
    }
    onUpload(event) {
        event.preventDefault();
        this.imagePicker?.nativeElement.click();
    }
    handleFileSelect(evt) {
        const files = evt.target?.files;
        if (files) {
            const file = files[0];
            this.imageName = file.name.split('.')[0];
            this.fileType = file.type;
            if (!this.fileType.includes('image'))
                return;
            this.urlImage = `data:${file.type};base64,`;
            if (file) {
                this.state.format = this.fileType.split('image/')[1];
                const reader = new FileReader();
                reader.onload = this.handleReaderLoaded.bind(this);
                reader.readAsBinaryString(file);
            }
        }
    }
    async handleReaderLoaded(readerEvt) {
        const binaryString = readerEvt.target.result;
        const base64textString = btoa(binaryString);
        this.state.originImageSrc = this.urlImage + base64textString;
        if (this.config.compressInitial) {
            this.state = {
                ...this.state,
                quality: Math.min(this.config.compressInitial || 92, 100),
                maintainAspectRatio: true,
                format: 'jpeg',
            };
            this.imageSrc = await convertImageUsingCanvas(this.urlImage + base64textString, false, this.state, { getDimFromImage: true });
        }
        else {
            this.imageSrc = this.urlImage + base64textString;
            let img = document.createElement('img');
            img.src = this.imageSrc;
            img.onload = () => {
                this.state.arrayCopiedImages = [];
                this.state.maxHeight = img.height;
                this.state.maxWidth = img.width;
                this.state.arrayCopiedImages.push({
                    lastImage: this.imageSrc,
                    width: img.width,
                    height: img.height,
                    quality: this.state.quality,
                    format: this.state.format,
                    originImageSrc: this.state.originImageSrc,
                });
            };
        }
        this.$imageChanged.next(this.imageSrc);
        this.loadImage = true;
        this.chRef.markForCheck();
    }
    onOpenEditPanel() {
        this.showEditPanel = true;
    }
    onCloseEditPanel(data) {
        if (data) {
            this.state = data.state;
            this.imageSrc = data.imageSrc;
            this.$imageChanged.next(this.imageSrc);
        }
        this.showEditPanel = false;
    }
    parseToBase64(imageUrl) {
        let types = imageUrl.split('.');
        let type = types[types.length - 1];
        if (type && (type == 'png' || type == 'jpeg' || type == 'webp')) {
            type = type;
        }
        else {
            type = 'jpeg';
        }
        this.state = {
            ...this.state,
            format: type,
        };
        return new Promise((resolve, reject) => {
            let img = new Image();
            img.crossOrigin = 'Anonymous';
            this.state = {
                ...this.state,
                maxHeight: img.height,
                maxWidth: img.width,
            };
            img.onload = () => {
                let canvas = document.createElement('canvas');
                let ctx = canvas.getContext('2d');
                if (!ctx)
                    return;
                let ratio = 1.0;
                canvas.width = img.width * ratio;
                canvas.height = img.height * ratio;
                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
                let dataURI = canvas.toDataURL(`image/${type}`, this.state.quality);
                return resolve({
                    dataUri: dataURI,
                    width: canvas.width,
                    height: canvas.height,
                });
            };
            img.onerror = (e) => {
                return reject(e.message || `Error loading the src = ${imageUrl}`);
            };
            img.src = imageUrl;
        }).then((data) => {
            this.state = {
                ...this.state,
                maxHeight: data.height,
                maxWidth: data.width,
            };
            return data.dataUri;
        });
    }
    processConfig(value) {
        if (value && value.constructor == Object) {
            this.config = { ...this.config, ...value };
            if (value.language != undefined) {
                if (value.language == 'en') {
                    this.labels = { ...labelEn };
                }
                if (value.language == 'es') {
                    this.labels = { ...labelEs };
                }
                if (value.language == 'fr') {
                    this.labels = { ...labelFr };
                }
                if (value.language == 'de') {
                    this.labels = { ...labelDe };
                }
            }
        }
    }
    calculateSize() {
        if (this.imageSrc && this.imageSrc.length) {
            return Math.ceil(((3 / 4) * this.imageSrc.length) / 1024);
        }
        else {
            return 0;
        }
    }
    ////////////////////////////////////////////////
    onRemove() {
        this.imageSrc = null;
        this.loadImage = false;
        this.$imageOriginal.next(null);
        this.$imageChanged.next(null);
        this.state = {
            ...this.state,
            originImageSrc: '',
            format: 'jpeg',
            maxHeight: 1000,
            maxWidth: 1000,
            cropHeight: 150,
            cropWidth: 150,
            maintainAspectRatio: true,
            arrayCopiedImages: [],
            basicFilters: undefined,
            quality: 92,
        };
        this.showEditPanel = false;
    }
}
NgpImagePickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: NgpImagePickerComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
NgpImagePickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.4", type: NgpImagePickerComponent, selector: "ngp-image-picker", inputs: { color: "color", _imageSrc: "_imageSrc", _config: "_config" }, outputs: { $imageChanged: "$imageChanged", $imageOriginal: "$imageOriginal" }, viewQueries: [{ propertyName: "imagePicker", first: true, predicate: ["imagePicker"], descendants: true }], ngImport: i0, template: "<div *ngIf=\"!loadImage\" class=\"place-image\">\n  <div\n    class=\"image-holder\"\n    [ngStyle]=\"{\n      width: this.config.width,\n      height: this.config.height,\n      borderRadius: this.config.borderRadius,\n      aspectRatio: this.config.aspectRatio\n    }\"\n  >\n    <button title=\"{{ labels['Upload a image'] }}\" class=\"icon-btn image-upload-btn\" (click)=\"onUpload($event)\">\n      <!--  <span class=\"material-icons\">add_a_photo</mat-icon> -->\n      <span class=\"material-icons\">add_a_photo</span>\n    </button>\n\n    <input #imagePicker type=\"file\" style=\"display: none\" [id]=\"'filePicker-' + this.uuidFilePicker\" (change)=\"handleFileSelect($event)\" />\n  </div>\n</div>\n<div *ngIf=\"loadImage\" class=\"place-image\">\n  <div\n    class=\"image-holder-loaded\"\n    [ngStyle]=\"{\n      width: this.config.width,\n      height: this.config.height,\n      borderRadius: this.config.borderRadius,\n      aspectRatio: this.config.aspectRatio\n    }\"\n  >\n    <img\n      [src]=\"this.imageSrc\"\n      alt=\"image-loaded\"\n      [ngStyle]=\"{ borderRadius: this.config.borderRadius, objectFit: this.config.objectFit }\"\n    />\n    <input #imagePicker type=\"file\" style=\"display: none\" [id]=\"'filePicker-' + this.uuidFilePicker\" (change)=\"handleFileSelect($event)\" />\n  </div>\n  <p\n    *ngIf=\"this.calculateSize()\"\n    class=\"caption image-caption\"\n    [ngStyle]=\"{\n      color: this.calculateSize() > 120 ? '#f44336' : 'unset',\n      fontWeight: this.calculateSize() > 120 ? '500' : 'unset'\n    }\"\n  >\n    size: {{ this.calculateSize() }}Kb &nbsp; {{ this.state.format }}\n  </p>\n\n  <div\n    style=\"flex-direction: row; box-sizing: border-box; display: flex; place-content: flex-start; align-items: flex-start\"\n    class=\"editing-bar-btn\"\n  >\n    <button\n      class=\"icon-btn\"\n      id=\"upload-img\"\n      *ngIf=\"!this.config.hideAddBtn\"\n      title=\"{{ labels['Upload a image'] }}\"\n      (click)=\"onUpload($event)\"\n    >\n      <span class=\"material-icons\">add_a_photo</span>\n    </button>\n    <button\n      class=\"icon-btn\"\n      id=\"edit-img\"\n      *ngIf=\"!this.config.hideEditBtn\"\n      title=\"{{ labels['Open the editor panel'] }}\"\n      (click)=\"onOpenEditPanel()\"\n    >\n      <span class=\"material-icons\">edit</span>\n    </button>\n    <a\n      id=\"download-img\"\n      *ngIf=\"!this.config.hideDownloadBtn\"\n      title=\"{{ labels['Download the image'] }}\"\n      [href]=\"this.imageSrc\"\n      download=\"{{ imageName }}\"\n    >\n      <span class=\"material-icons\">cloud_download</span>\n    </a>\n    <button class=\"icon-btn\" id=\"delete-img\" *ngIf=\"!this.config.hideDeleteBtn\" title=\"{{ labels['Remove'] }}\" (click)=\"onRemove()\">\n      <span class=\"material-icons\">delete</span>\n    </button>\n  </div>\n</div>\n\n<lib-edit-image\n  *ngIf=\"showEditPanel\"\n  [imageSrc]=\"this.imageSrc\"\n  [initialState]=\"this.state\"\n  [labels]=\"this.labels\"\n  [color]=\"this.color\"\n  (closeModal)=\"this.onCloseEditPanel($event)\"\n></lib-edit-image>\n", styles: ["ngp-image-picker p{margin:0!important;padding:0!important}ngp-image-picker .place-image{flex-direction:column;box-sizing:border-box;display:flex;place-content:flex-start;align-items:flex-start}ngp-image-picker .place-image .image-holder{flex-direction:column;display:flex;place-content:center;align-items:center;position:relative;border-radius:16px;max-width:100%!important;box-sizing:border-box;border:2px rgba(0,0,0,.3) solid;background-color:#fcfcfc}@media (max-width: 599px){ngp-image-picker .place-image .image-holder{max-width:100%!important;max-height:250px!important}}ngp-image-picker .place-image .image-holder .image-upload-btn{transition:all .5s ease;position:relative;opacity:.85;width:50px;height:50px;color:#424242}ngp-image-picker .place-image .image-holder .image-upload-btn .material-icons{font-size:50px;width:50px;height:50px;line-height:50px;color:#424242}@media (max-width: 599px){ngp-image-picker .place-image .image-holder .image-upload-btn{opacity:1;width:30px;height:30px}ngp-image-picker .place-image .image-holder .image-upload-btn .material-icons{font-size:30px;width:30px;height:30px;line-height:30px}}ngp-image-picker .place-image .image-holder:hover .image-upload-btn{opacity:1;transition:all .5s ease}ngp-image-picker .place-image .image-holder-loaded{flex-direction:column;display:flex;place-content:center;align-items:center;position:relative;max-width:100%!important;border-radius:4px;box-sizing:border-box;padding:2px}ngp-image-picker .place-image .image-holder-loaded .image-caption{position:absolute;right:0;bottom:-22px}ngp-image-picker .place-image .image-holder-loaded img{height:100%;max-height:100%;width:100%;max-width:100%;object-position:center;background:black}@media (max-width: 599px){ngp-image-picker .place-image .image-holder-loaded{max-height:195px!important}}ngp-image-picker .place-image .image-holder-loaded .image-upload-btn{transition:all .5s ease;position:relative;opacity:.85;width:50px;height:50px;color:#424242}ngp-image-picker .place-image .image-holder-loaded .image-upload-btn .material-icons{font-size:50px;width:50px;height:50px;line-height:50px;color:#424242}@media (max-width: 599px){ngp-image-picker .place-image .image-holder-loaded .image-upload-btn{opacity:1;width:30px;height:30px}ngp-image-picker .place-image .image-holder-loaded .image-upload-btn .material-icons{font-size:30px;width:30px;height:30px;line-height:30px}}ngp-image-picker .place-image .image-holder-loaded:hover .image-upload-btn{opacity:1;transition:all .5s ease}ngp-image-picker .place-image .editing-bar-btn{margin-top:2px}ngp-image-picker .place-image .editing-bar-btn .material-icons-button{height:20px;line-height:20px;width:24px}ngp-image-picker .place-image .editing-bar-btn .material-icons{line-height:20px!important;font-size:20px!important;width:20px!important;height:20px!important}ngp-image-picker .place-image .editing-bar-btn button{margin:4px;color:#424242;transition:all .5s ease}ngp-image-picker .place-image .editing-bar-btn button:hover{transition:all .25s ease-in}ngp-image-picker .place-image .editing-bar-btn a{margin:4px;color:#424242;transition:all .5s ease}ngp-image-picker .place-image .editing-bar-btn a:hover{transition:all .25s ease-in}@keyframes show{0%{top:-100vh;opacity:0}to{top:0;opacity:1}}ngp-image-picker .btn{padding:4px 8px;border-radius:4px;cursor:pointer}ngp-image-picker .btn .material-icons{color:#000000d1}ngp-image-picker .icon-btn{display:flex;justify-content:center;align-items:center;border:none;background-color:inherit;border-radius:50%;cursor:pointer}ngp-image-picker .icon-btn :active{transform:scale(.95)}ngp-image-picker .caption{font-size:11px;margin-top:2px!important;margin-bottom:0!important}ngp-image-picker button[disabled]{filter:brightness(.5);cursor:not-allowed}ngp-image-picker .croppr-container *{user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;box-sizing:border-box;-webkit-box-sizing:border-box;-moz-box-sizing:border-box}ngp-image-picker .croppr-container img{vertical-align:middle;max-width:100%;max-height:650px;object-fit:cover;object-position:center}ngp-image-picker .croppr{position:relative;display:inline-block}ngp-image-picker .croppr-overlay{background:rgba(0,0,0,.5);position:absolute;inset:0;z-index:1;cursor:crosshair}ngp-image-picker .croppr-region{border:1px dashed rgba(0,0,0,.5);position:absolute;z-index:3;cursor:move;top:0;display:grid;gap:0px;grid-template-columns:repeat(3,1fr)}ngp-image-picker .croppr-imageClipped{position:absolute;inset:0;z-index:2;pointer-events:none}ngp-image-picker .croppr-handle{border:1px solid #ccc;background-color:#fafafa;width:14px;height:14px;position:absolute;z-index:4;top:0;border-radius:50%}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "component", type: i2.EditImageComponent, selector: "lib-edit-image", inputs: ["labels", "imageSrc", "color", "initialState"], outputs: ["closeModal"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: NgpImagePickerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ngp-image-picker', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: "<div *ngIf=\"!loadImage\" class=\"place-image\">\n  <div\n    class=\"image-holder\"\n    [ngStyle]=\"{\n      width: this.config.width,\n      height: this.config.height,\n      borderRadius: this.config.borderRadius,\n      aspectRatio: this.config.aspectRatio\n    }\"\n  >\n    <button title=\"{{ labels['Upload a image'] }}\" class=\"icon-btn image-upload-btn\" (click)=\"onUpload($event)\">\n      <!--  <span class=\"material-icons\">add_a_photo</mat-icon> -->\n      <span class=\"material-icons\">add_a_photo</span>\n    </button>\n\n    <input #imagePicker type=\"file\" style=\"display: none\" [id]=\"'filePicker-' + this.uuidFilePicker\" (change)=\"handleFileSelect($event)\" />\n  </div>\n</div>\n<div *ngIf=\"loadImage\" class=\"place-image\">\n  <div\n    class=\"image-holder-loaded\"\n    [ngStyle]=\"{\n      width: this.config.width,\n      height: this.config.height,\n      borderRadius: this.config.borderRadius,\n      aspectRatio: this.config.aspectRatio\n    }\"\n  >\n    <img\n      [src]=\"this.imageSrc\"\n      alt=\"image-loaded\"\n      [ngStyle]=\"{ borderRadius: this.config.borderRadius, objectFit: this.config.objectFit }\"\n    />\n    <input #imagePicker type=\"file\" style=\"display: none\" [id]=\"'filePicker-' + this.uuidFilePicker\" (change)=\"handleFileSelect($event)\" />\n  </div>\n  <p\n    *ngIf=\"this.calculateSize()\"\n    class=\"caption image-caption\"\n    [ngStyle]=\"{\n      color: this.calculateSize() > 120 ? '#f44336' : 'unset',\n      fontWeight: this.calculateSize() > 120 ? '500' : 'unset'\n    }\"\n  >\n    size: {{ this.calculateSize() }}Kb &nbsp; {{ this.state.format }}\n  </p>\n\n  <div\n    style=\"flex-direction: row; box-sizing: border-box; display: flex; place-content: flex-start; align-items: flex-start\"\n    class=\"editing-bar-btn\"\n  >\n    <button\n      class=\"icon-btn\"\n      id=\"upload-img\"\n      *ngIf=\"!this.config.hideAddBtn\"\n      title=\"{{ labels['Upload a image'] }}\"\n      (click)=\"onUpload($event)\"\n    >\n      <span class=\"material-icons\">add_a_photo</span>\n    </button>\n    <button\n      class=\"icon-btn\"\n      id=\"edit-img\"\n      *ngIf=\"!this.config.hideEditBtn\"\n      title=\"{{ labels['Open the editor panel'] }}\"\n      (click)=\"onOpenEditPanel()\"\n    >\n      <span class=\"material-icons\">edit</span>\n    </button>\n    <a\n      id=\"download-img\"\n      *ngIf=\"!this.config.hideDownloadBtn\"\n      title=\"{{ labels['Download the image'] }}\"\n      [href]=\"this.imageSrc\"\n      download=\"{{ imageName }}\"\n    >\n      <span class=\"material-icons\">cloud_download</span>\n    </a>\n    <button class=\"icon-btn\" id=\"delete-img\" *ngIf=\"!this.config.hideDeleteBtn\" title=\"{{ labels['Remove'] }}\" (click)=\"onRemove()\">\n      <span class=\"material-icons\">delete</span>\n    </button>\n  </div>\n</div>\n\n<lib-edit-image\n  *ngIf=\"showEditPanel\"\n  [imageSrc]=\"this.imageSrc\"\n  [initialState]=\"this.state\"\n  [labels]=\"this.labels\"\n  [color]=\"this.color\"\n  (closeModal)=\"this.onCloseEditPanel($event)\"\n></lib-edit-image>\n", styles: ["ngp-image-picker p{margin:0!important;padding:0!important}ngp-image-picker .place-image{flex-direction:column;box-sizing:border-box;display:flex;place-content:flex-start;align-items:flex-start}ngp-image-picker .place-image .image-holder{flex-direction:column;display:flex;place-content:center;align-items:center;position:relative;border-radius:16px;max-width:100%!important;box-sizing:border-box;border:2px rgba(0,0,0,.3) solid;background-color:#fcfcfc}@media (max-width: 599px){ngp-image-picker .place-image .image-holder{max-width:100%!important;max-height:250px!important}}ngp-image-picker .place-image .image-holder .image-upload-btn{transition:all .5s ease;position:relative;opacity:.85;width:50px;height:50px;color:#424242}ngp-image-picker .place-image .image-holder .image-upload-btn .material-icons{font-size:50px;width:50px;height:50px;line-height:50px;color:#424242}@media (max-width: 599px){ngp-image-picker .place-image .image-holder .image-upload-btn{opacity:1;width:30px;height:30px}ngp-image-picker .place-image .image-holder .image-upload-btn .material-icons{font-size:30px;width:30px;height:30px;line-height:30px}}ngp-image-picker .place-image .image-holder:hover .image-upload-btn{opacity:1;transition:all .5s ease}ngp-image-picker .place-image .image-holder-loaded{flex-direction:column;display:flex;place-content:center;align-items:center;position:relative;max-width:100%!important;border-radius:4px;box-sizing:border-box;padding:2px}ngp-image-picker .place-image .image-holder-loaded .image-caption{position:absolute;right:0;bottom:-22px}ngp-image-picker .place-image .image-holder-loaded img{height:100%;max-height:100%;width:100%;max-width:100%;object-position:center;background:black}@media (max-width: 599px){ngp-image-picker .place-image .image-holder-loaded{max-height:195px!important}}ngp-image-picker .place-image .image-holder-loaded .image-upload-btn{transition:all .5s ease;position:relative;opacity:.85;width:50px;height:50px;color:#424242}ngp-image-picker .place-image .image-holder-loaded .image-upload-btn .material-icons{font-size:50px;width:50px;height:50px;line-height:50px;color:#424242}@media (max-width: 599px){ngp-image-picker .place-image .image-holder-loaded .image-upload-btn{opacity:1;width:30px;height:30px}ngp-image-picker .place-image .image-holder-loaded .image-upload-btn .material-icons{font-size:30px;width:30px;height:30px;line-height:30px}}ngp-image-picker .place-image .image-holder-loaded:hover .image-upload-btn{opacity:1;transition:all .5s ease}ngp-image-picker .place-image .editing-bar-btn{margin-top:2px}ngp-image-picker .place-image .editing-bar-btn .material-icons-button{height:20px;line-height:20px;width:24px}ngp-image-picker .place-image .editing-bar-btn .material-icons{line-height:20px!important;font-size:20px!important;width:20px!important;height:20px!important}ngp-image-picker .place-image .editing-bar-btn button{margin:4px;color:#424242;transition:all .5s ease}ngp-image-picker .place-image .editing-bar-btn button:hover{transition:all .25s ease-in}ngp-image-picker .place-image .editing-bar-btn a{margin:4px;color:#424242;transition:all .5s ease}ngp-image-picker .place-image .editing-bar-btn a:hover{transition:all .25s ease-in}@keyframes show{0%{top:-100vh;opacity:0}to{top:0;opacity:1}}ngp-image-picker .btn{padding:4px 8px;border-radius:4px;cursor:pointer}ngp-image-picker .btn .material-icons{color:#000000d1}ngp-image-picker .icon-btn{display:flex;justify-content:center;align-items:center;border:none;background-color:inherit;border-radius:50%;cursor:pointer}ngp-image-picker .icon-btn :active{transform:scale(.95)}ngp-image-picker .caption{font-size:11px;margin-top:2px!important;margin-bottom:0!important}ngp-image-picker button[disabled]{filter:brightness(.5);cursor:not-allowed}ngp-image-picker .croppr-container *{user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;box-sizing:border-box;-webkit-box-sizing:border-box;-moz-box-sizing:border-box}ngp-image-picker .croppr-container img{vertical-align:middle;max-width:100%;max-height:650px;object-fit:cover;object-position:center}ngp-image-picker .croppr{position:relative;display:inline-block}ngp-image-picker .croppr-overlay{background:rgba(0,0,0,.5);position:absolute;inset:0;z-index:1;cursor:crosshair}ngp-image-picker .croppr-region{border:1px dashed rgba(0,0,0,.5);position:absolute;z-index:3;cursor:move;top:0;display:grid;gap:0px;grid-template-columns:repeat(3,1fr)}ngp-image-picker .croppr-imageClipped{position:absolute;inset:0;z-index:2;pointer-events:none}ngp-image-picker .croppr-handle{border:1px solid #ccc;background-color:#fafafa;width:14px;height:14px;position:absolute;z-index:4;top:0;border-radius:50%}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { color: [{
                type: Input
            }], _imageSrc: [{
                type: Input
            }], _config: [{
                type: Input
            }], imagePicker: [{
                type: ViewChild,
                args: ['imagePicker', { static: false }]
            }], $imageChanged: [{
                type: Output
            }], $imageOriginal: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,